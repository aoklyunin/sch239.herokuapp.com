1) Нормальная вёрстка форм
2) Диалог с школьниками по попыткам
4) Отображать последнее соббщение в описании попытки с отображением, школьник написал или я
5) При открытии диалога указывать, кто написал сообщение
6) Вёрстка таблиц
7) Проверять ссылку на попытку на правильность
8) Выводить числа в заданном диапазоне дат
9) В таблицы thead (заголовок)
11) Оценки в заданном диапазоне (для простоты можно сделать две страницы: первая задания за последние две или три недели, вторая - за всё время)
    Можно просто обрабатывать пост-запрос(мб лучше вообще выводить по месяцам оценки), по умолчанию перехаодить на текущий месяц
16) нормально сверстать страницу loadAttempt
18) нормальный список попыток
21) При выборе селект'а нужно менять поля по умолчанию (jquery) надо
22) В окна входа логин-логин, а не логин-пароль
23) Вёрстка просмотра попытки
24) Добавить метки в журнале, чтобы переходить к колонке с заданиями, от просмотра попытки которого перешёл польователь,
В просмотер попытки поменять ссылку на журнал на ссылку на метку
25) В шапке названия заданий: менять _ на пробел
26) Ссылки при загрузке эссе у всех попыток одинаковые (надо проверить, что ссылки у попыток создаются правильно)
asfasf
27) Добавить инструкцию по развёртке
28) Ошибка загрузки ссылкок, начинать с определителя ДЗ
29) Показывать, просрочена попытка или нет, завершена ли
30) Вообще стоит поптом перестроить управление так, чтобы когда школьник добавляет попытку, система искала оценку, если её нет, то
добавляла бы кол и свящывала попытку с оценкой
31) модель ошибки, чтобы можно было добавлять ошибки из любого места кода и выводить в первом загруженном окне
32) добавить сообщение об удачном исправлении оценки в окне оценки
33) в оценках надо цветом выделять, просрочена попытка или нет, добавить кнопки сдвига на месяц вперёд, назад, просотр по группам
34) в программе, которая автоматом запускается, добавить проверку оценки на просроченность, добавить соотв. поле в оценку
35) Добавить кнопку для каждого задания в журнале "открыть все попытки со ссылками", т.е. открывается страница с попыткой и страницы со всеми ссылками
мб и нах. не нужно - надо подумать
36) скачивать все pdf в папку, потом просто загружать из папки
37) Дата отображается коряво в журнале(сначала месяц, потом число)
38) отображать только учеников 10-3 в журнале
39) комментарий в списке отображается первый, а не последний
40) добавить возможность отклонять попытку
41) не давать писать сообщения в принятой и отклонённой попытках
42) если открывать обсуждение попытки, то суперпользователю ссылка должна быть не в личный кабинет, а на список попыток
43) попытки надо ещё сортировать по принципу, ответил я на неё или нет
44) нужно сделать всплывающее окно, чтобы отвечать без перехода в обсуждение

45) Добавить всплывающее сообщение, мол попытку нельзя добавлять
46) некоторые тесты не загрузились из mdl. Скорее всего дело в несоответствии названия в базе и на сайте, в принципе похуй
47) Попытки в личном кабинете стоит сортировать в порядке подачи
48) http на heroku не загружает стили, https - загружает
49) на почту отправлять сообщения о статусе заявки школьника
50) горизонтальная линия в разделении таблицы
51) Иногда попытки в mdl отображают 0, хотя по факту задача сделана
52) Нужно добавить ссылку на попытку при открытии markView
53) Запретить регестрировать пользователя с совпадающими именем и фамилией
54) Автоматически подменять при регистрации ё на е
55) Сделать форму восстановления пароля
56) В идеале потом хранить древовидное представление лексем кода при помощи ManyToManyField
57) Добавить обработку квадратгных скобок в обработчик скобок
58) В журнале надо сортировать с самого позднего задания, а не самого раннего
59) В идеале вообще сомтреть, какое задание в журнале надо отобразить и отобразжать работу в классе полагая его число текущим,
а дз на неделю позже(как в элетронном журнале)
60) Мб Надо не загружать все программные коды и хранить их, а хранить только списывальщиков(претендеентов на списывание)


!анализ кода!
Нужно отловить случаи, окгда пользователь создаёт свой класс, как обёртку над существующим типом
Поддержка кирилицы в регулярках
Записать в массив как из строки, соотв. регулярке получ. аргументы регулярки при помощи лямбда-выражений
Нужно всегда, удаляя блок возвращать удалённые пробелы за счёт проверки, начинась ли строка с пробела, заканчивалась ли

обращение по индексу к элементу
регулярка вызова метода
нужно написать для многоэтажных вызовов
надо учитывать, что присвоение может быть многоэтажным
sc = new Scanner(System.in);- создание объекта класса
 if, if-else
 арифметические операции
точка с запято тоже отдельная лексема asfas


